#include <windows.h>
#include <GL/glut.h>
#include <math.h>

GLfloat  i = 0.1f;
void Idle()
{
    glutPostRedisplay();
}
void circle(GLfloat rx,GLfloat ry,GLfloat cx,GLfloat cy){

    glBegin(GL_TRIANGLE_FAN);

  for(int j=0;j<=100;j++){

  float angle=2*3.1416*j/100;

  float x=rx*cosf(angle);
  float y=ry*sinf(angle);
  glVertex2f(x+cx,y+cy);

}
  glEnd();
}

void display(void)
{

glClearColor(1.0,1.0,1.0,0.0);
    glClear (GL_COLOR_BUFFER_BIT);


    //circle
    glColor3f(0.0,0.0,0.0);
    circle(0.5,0.5,25,25);


    glPushMatrix();
    glTranslatef(25,25,0);
    glRotatef(i,0.0,0.0,-1.0);

//first triangle for kite
    glBegin(GL_TRIANGLES);
    glColor3ub(255, 0, 0);
    glVertex2f(0,0);
    glVertex2f(2,5);
    glVertex2f(5,3);
    glEnd();
    //second triangle
    glBegin(GL_TRIANGLES);
    glColor3ub(0, 0, 255);
    glVertex2f(0,0);
    glVertex2f(-2,-5);
    glVertex2f(-5,-3);
    glEnd();
    //third triangle
    glBegin(GL_TRIANGLES);
    glColor3ub(251, 255, 0);
    glVertex2f(0,0);
    glVertex2f(-2,5);
    glVertex2f(-5,3);
    glEnd();
   //Fourth triangle
    glBegin(GL_TRIANGLES);
    glColor3ub(0, 255, 112);
    glVertex2f(0,0);
    glVertex2f(2,-5);
    glVertex2f(5,-3);
    glEnd();


    glPopMatrix();
    i+= 0.01f;



    glFlush ();
}


void init (void)
{
/* select clearing (background) color */
glClearColor (1.0, 1.0, 1.0, 0.0);
/* initialize viewing values */
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
gluOrtho2D(0,50,0,50);
}


int main(int argc, char** argv)
{
glutInit(&argc, argv);
glutInitWindowSize (500, 500);
glutInitWindowPosition (50, 50);
glutCreateWindow ("Rotation");
init ();
glutDisplayFunc(display);
glutIdleFunc(Idle);
glutMainLoop();
return 0;
}

