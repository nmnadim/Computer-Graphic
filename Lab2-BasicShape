#include<windows.h>
#ifdef APPLE
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif

#include <stdlib.h>


#include <GL/gl.h>
#include <GL/glut.h>
#include <math.h>

void circle(GLfloat rx,GLfloat ry,GLfloat cx,GLfloat cy){

    glBegin(GL_TRIANGLE_FAN);

  for(int i=0;i<=100;i++){

  float angle=2*3.1416*i/100;

  float x=rx*cosf(angle);
  float y=ry*sinf(angle);
  glVertex2f(x+cx,y+cy);

}
  glEnd();
}


void display(void)
{

glClear (GL_COLOR_BUFFER_BIT);


  // x axis
glColor3ub(9, 252, 5 );
glBegin(GL_LINES);
glVertex3f(-50.0,0.0,0.0);
glVertex3f(50.0,0.0,0.0);
glEnd();


//y axis
glColor3ub(9, 252, 5 );
glBegin(GL_LINES);
glVertex3f(0.0,-50.0,0.0);
glVertex3f(0.0,50.0,0.0);
glEnd();

//points

glColor3f(11,233,0);
glPointSize(5);
glBegin(GL_POINTS);
glVertex3f(0.0,0.0,0.0);

glEnd();

//circle
glColor3f(0.0,0.0,0.0);
circle(14,14,25,25);

glBegin(GL_QUADS);
glColor3ub(51, 51, 204);
glVertex3f(15,20,0);
glVertex3f(35,20,0);
glVertex3f(35,30,0);
glVertex3f(15,30,0);
glEnd();
glBegin(GL_TRIANGLES);
glColor3ub(0, 0, 102);
glVertex3f(25,25,0);
glVertex3f(35,30,0);
glVertex3f(15,30,0);
glEnd();

//kite
glColor3f(0.0,0.0,0.0);
circle(0.5,0.5,-25,-25);

//First triangle
glBegin(GL_TRIANGLES);
glColor3ub(255, 0, 0 );
glVertex2f(-25, -25);
glVertex2f(-26, -15);
glVertex2f(-35, -15);

//second triangle
glColor3ub(0, 0, 255 );
glVertex2f(-25, -25);
glVertex2f(-35, -26);
glVertex2f(-35, -35);

//third triangle
glColor3ub(251, 255, 0 );
glVertex2f(-25, -25);
glVertex2f(-24, -35);
glVertex2f(-15, -35);
//fourth triangle
glColor3ub(0, 255, 112 );
glVertex2f(-25, -25);
glVertex2f(-15, -24);
glVertex2f(-15, -15);
glEnd();

//square
glBegin(GL_QUADS);

//stick
glColor3ub(4, 103, 5);
glVertex2f(5,-5);
glVertex2f(6,-5);
glVertex2f(6,-45);
glVertex2f(5,-45);

//base
glColor3ub(0, 0, 0);
glVertex2f(3,-45);
glVertex2f(8,-45);
glVertex2f(9,-47);
glVertex2f(2,-47);

//rectangle
glColor3ub(0, 106, 78);
glVertex2f(6,-8);
glVertex2f(6,-22);
glVertex2f(36,-22);
glVertex2f(36,-8);
glEnd();

//circle
glColor3ub(244, 42, 65);
circle(5,5,21,-15);


glBegin(GL_QUADS);

//square
glColor3ub(0, 0, 0);
glVertex2f(-15,15);
glVertex2f(-15,35);
glVertex2f(-35,35);
glVertex2f(-35,15);
glEnd();
//circle for
glColor3f(255, 255, 255);
circle(10,10,-25,25);
//For sign
glBegin(GL_POLYGON);
glColor3ub(79, 251, 28);
glVertex2f(-25,33);
glVertex2f(-30,28);
glVertex2f(-27,28);
glVertex2f(-27,18);
glVertex2f(-23,18);
glVertex2f(-23,28);
glVertex2f(-20,28);
glEnd();








glFlush ();
}

void init (void)
{
/* select clearing (background) color */
glClearColor (1.0, 1.0, 1.0, 0.0);
/* initialize viewing values */
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
glOrtho(-50, 50, -50, 50, -10.0, 10.0);
}


int main(int argc, char** argv)
{
glutInit(&argc, argv);
glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);
glutInitWindowSize (600, 600);
glutInitWindowPosition (100, 100);
glutCreateWindow ("hello");
init ();
glutDisplayFunc(display);
glutMainLoop();
return 0; /* ISO C requires main to return int. */
}

